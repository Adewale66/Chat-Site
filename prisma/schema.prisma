// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}




model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  hashedPassword String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  accounts      Account[]
  messages      Message[]
  friends       Friend[]
  adminOf       Group[] @relation(name: "admin")
  groupIds      String[] @db.ObjectId
  groups        Group[] @relation(fields: [groupIds], references: [id]) 
 
}



model Account {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId             String @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Group {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String   
  createdAt   DateTime @default(now())
  upDatedAt   DateTime @updatedAt
  adminId     String @db.ObjectId
  admin       User @relation(fields: [adminId], references: [id], name: "admin")
  userIds     String[] @db.ObjectId
  users       User[] @relation(fields: [userIds], references: [id])
  messagesId  String[] @db.ObjectId
  messages    Message[] 
  
}

model Message {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  message     String?
  createdAt   DateTime @default(now())
  user      User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String @db.ObjectId
  group     Group @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId   String @db.ObjectId

}

model Friend {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String @db.ObjectId
  user        User @relation(fields: [userId], references: [id], onDelete: Cascade)

}